import fs from "fs-extra";
import path from "path";
import chalk from "chalk";

export default async function injectOtel() {
  try {
    const cwd = process.cwd();

    // Ensure agent config exists
    const agentConfigPath = path.join(cwd, ".a2a.config.json");
    if (!(await fs.pathExists(agentConfigPath))) {
      console.error(chalk.red("‚ùå No .a2a.config.json found. Run `a2a link` first."));
      process.exit(1);
    }

    const agentConfig = await fs.readJson(agentConfigPath);

    // Where we‚Äôll put the OTel setup file
    const otelFilePath = path.join(cwd, "a2a-otel-setup.js");

    // Boilerplate OTel setup code
    const otelContent = `
// Auto-generated by A2A CLI
import { NodeSDK } from "@opentelemetry/sdk-node";
import { getNodeAutoInstrumentations } from "@opentelemetry/auto-instrumentations-node";
import { OTLPTraceExporter } from "@opentelemetry/exporter-trace-otlp-http";
import { Resource } from "@opentelemetry/resources";
import { SemanticResourceAttributes } from "@opentelemetry/semantic-conventions";

// Configure exporter with agent's endpoint + token
const exporter = new OTLPTraceExporter({
  url: "${agentConfig.endpoint}",
  headers: { Authorization: "Bearer ${agentConfig.token}" }
});

// Define resource (identifies this agent)
const resource = new Resource({
  [SemanticResourceAttributes.SERVICE_NAME]: "${agentConfig.agentName}",
  "a2a.agent.id": "${agentConfig.agentId}"
});

// Start the SDK
const sdk = new NodeSDK({
  traceExporter: exporter,
  instrumentations: [getNodeAutoInstrumentations()],
  resource
});

sdk.start().then(() => {
  console.log("üì° A2A OpenTelemetry initialized for agent: ${agentConfig.agentName}");
});

// Ensure shutdown on exit
process.on("SIGTERM", () => sdk.shutdown());
process.on("SIGINT", () => sdk.shutdown());
`;

    // Write the file
    await fs.writeFile(otelFilePath, otelContent, "utf8");

    console.log(chalk.green("‚úÖ OTel setup injected successfully!"));
    console.log(chalk.gray(`File created: ${otelFilePath}`));
    console.log(chalk.cyan("üëâ Add this import at the very top of your entrypoint:"));
    console.log(chalk.yellow(`import './a2a-otel-setup.js';`));
  } catch (err) {
    console.error(chalk.red("‚ùå Failed to inject OTel setup:"), err);
  }
}
